{"message":"cannot return value referencing temporary value","code":{"code":"E0515","explanation":"Cannot return value that references local variable\n\nLocal variables, function parameters and temporaries are all dropped before the\nend of the function body. So a reference to them cannot be returned.\n\nErroneous code example:\n\n```compile_fail,E0515\nfn get_dangling_reference() -> &'static i32 {\n    let x = 0;\n    &x\n}\n```\n\n```compile_fail,E0515\nuse std::slice::Iter;\nfn get_dangling_iterator<'a>() -> Iter<'a, i32> {\n    let v = vec![1, 2, 3];\n    v.iter()\n}\n```\n\nConsider returning an owned value instead:\n\n```\nuse std::vec::IntoIter;\n\nfn get_integer() -> i32 {\n    let x = 0;\n    x\n}\n\nfn get_owned_iterator() -> IntoIter<i32> {\n    let v = vec![1, 2, 3];\n    v.into_iter()\n}\n```\n"},"level":"error","spans":[{"file_name":"src/args.rs","byte_start":2231,"byte_end":2250,"line_start":75,"line_end":75,"column_start":18,"column_end":37,"is_primary":true,"text":[{"text":"          return Err(error.as_str());","highlight_start":18,"highlight_end":37}],"label":"returns a value referencing data owned by the current function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"<::alloc::macros::format macros>","byte_start":28,"byte_end":145,"line_start":3,"line_end":6,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    {","highlight_start":5,"highlight_end":6},{"text":"        let res = $ crate :: fmt :: format","highlight_start":1,"highlight_end":43},{"text":"        ($ crate :: __export :: format_args ! ($ ($ arg) *)) ; res","highlight_start":1,"highlight_end":67},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"temporary value created here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/args.rs","byte_start":2177,"byte_end":2211,"line_start":73,"line_end":73,"column_start":24,"column_end":58,"is_primary":false,"text":[{"text":"          let error = &format!(\"Invalid option: {}\", arg);","highlight_start":24,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"format!","def_site_span":{"file_name":"<::alloc::macros::format macros>","byte_start":0,"byte_end":147,"line_start":1,"line_end":7,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"($ ($ arg : tt) *) =>","highlight_start":1,"highlight_end":22},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        let res = $ crate :: fmt :: format","highlight_start":1,"highlight_end":43},{"text":"        ($ crate :: __export :: format_args ! ($ ($ arg) *)) ; res","highlight_start":1,"highlight_end":67},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0515]\u001b[0m\u001b[0m\u001b[1m: cannot return value referencing temporary value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/args.rs:75:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          let error = &format!(\"Invalid option: {}\", arg);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mtemporary value created here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          return Err(error.as_str());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mreturns a value referencing data owned by the current function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0515`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0515`.\u001b[0m\n"}
